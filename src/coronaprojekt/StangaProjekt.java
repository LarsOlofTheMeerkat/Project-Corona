package coronaprojekt;

import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import oru.inf.InfException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Padfo
 */
public class StangaProjekt extends javax.swing.JFrame {
    
     private static InfDB minDatabaskoppling;
     private int anvandareID;

    /**
     * Creates new form StangaProjekt
     * @param minDatabaskoppling
     */
    public StangaProjekt(InfDB minDatabaskoppling) {
        initComponents();
        this.setLocationRelativeTo(null);
        StangaProjekt.minDatabaskoppling = minDatabaskoppling;
    }

    private StangaProjekt() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHamtaProjekt = new javax.swing.JButton();
        btnHamtaEgnaProjekt = new javax.swing.JButton();
        txtAndraStatus = new javax.swing.JTextField();
        btnAndraTillPublikt = new javax.swing.JButton();
        txtAreaProjekt = new javax.swing.JTextArea();
        btnAndraTillPrivat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnHamtaProjekt.setText("Hämta alla projekt");
        btnHamtaProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamtaProjektActionPerformed(evt);
            }
        });

        btnHamtaEgnaProjekt.setText("Hämta dina projekt");
        btnHamtaEgnaProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamtaEgnaProjektActionPerformed(evt);
            }
        });

        txtAndraStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAndraStatusActionPerformed(evt);
            }
        });

        btnAndraTillPublikt.setText("Gör Projekt Publikt");
        btnAndraTillPublikt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAndraTillPubliktActionPerformed(evt);
            }
        });

        txtAreaProjekt.setColumns(20);
        txtAreaProjekt.setRows(5);

        btnAndraTillPrivat.setText("Gör Projekt Privat");
        btnAndraTillPrivat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAndraTillPrivatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(txtAreaProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnHamtaProjekt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHamtaEgnaProjekt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(226, 226, 226))
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(txtAndraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAndraTillPrivat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAndraTillPublikt, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnHamtaProjekt)
                        .addGap(61, 61, 61)
                        .addComponent(btnHamtaEgnaProjekt))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(txtAreaProjekt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAndraStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAndraTillPublikt, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(31, 31, 31)
                .addComponent(btnAndraTillPrivat)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHamtaProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamtaProjektActionPerformed
        txtAreaProjekt.setText("");
        String query = ("SELECT * FROM FORSKNINGSPROJEKT WHERE PUBLIK = 'J'");
        System.out.println(query);
       
        
        try{
           ArrayList<HashMap<String, String>> listaAvProjekt = minDatabaskoppling.fetchRows(query);
           for (HashMap<String, String> ettProjekt : listaAvProjekt) {
               
                String id = ettProjekt.get("ID");
                String namn= ettProjekt.get("NAMN");
                
                txtAreaProjekt.append("ID: " + id + "\nNamn: " + namn + "\n" + "\n");
                
                System.out.println(listaAvProjekt);
           }
        } catch (InfException e) {
            System.out.println("Intern felmeddelande: " + e.getMessage());
        }
           
        
        
    }//GEN-LAST:event_btnHamtaProjektActionPerformed

    private void btnHamtaEgnaProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamtaEgnaProjektActionPerformed
        /*EJ FÄRDIG - EJ NÖDVÄNDIG
        
        
        txtAreaProjekt.setText("");
        anvandareID = 5;
        
        //String query2 = ("SELECT * FROM FORSKNINGSPROJEKT WHERE ID IN (SELECT FORSKNINGSPROJEKTSID FROM PROJEKT WHERE  \" + anvandareID  + \")");
        //String query2 = ("SELECT * FROM FORSKNINGSPROJEKT WHERE ID IN (SELECT FORSKNINGSPROJEKTSID FROM " + anvandareID  + ")");
        //String query2 = ("SELECT * FROM FORSKNINGSPROJEKT WHERE ID = (SELECT FORSKNINGSPROJEKTSID FROM PROJEKT WHERE " + anvandareID  + ")");
        String query2 = ("SELECT * FROM FORSKNINGSPROJEKT WHERE ID = (Select FORSKNINGSPROJEKTSID FROM PROJEKT WHERE ANVANDAREID = '5')");
        
        System.out.println(query2);
        
                try {
            ArrayList<HashMap<String, String>> listaAvProjekt = minDatabaskoppling.fetchRows(query2);
        
            for (HashMap<String, String> ettProjekt : listaAvProjekt) {
                
                String id = ettProjekt.get("ID");
                String publik = ettProjekt.get("PUBLIK");
                String namn= ettProjekt.get("NAMN");
                
            txtAreaProjekt.append("ID: " + id + "\nPublik :" + publik + "\nNamn: " + namn + "\n" + "\n");
            }
            } catch (InfException ex) {
            System.out.println(ex.getMessage());
        } catch (NullPointerException ex) {
            System.out.println(ex.getMessage());
        }*/
    }//GEN-LAST:event_btnHamtaEgnaProjektActionPerformed

    private void txtAndraStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAndraStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAndraStatusActionPerformed

    
    //Metod för att ändra ett projekt till publikt, med krav om medlemskap i gruppen
    private void btnAndraTillPubliktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndraTillPubliktActionPerformed
       
        txtAreaProjekt.setText("");
        String gruppId = txtAndraStatus.getText();
         anvandareID = 5;
        
        
        String query3 = ("select * from PROJEKT where ANVANDAREID = " + anvandareID + " AND FORSKNINGSPROJEKTID = " + gruppId);
        
                try {
                    ArrayList<HashMap<String, String>> listaAvProjekt = minDatabaskoppling.fetchRows(query3);
            
                    for (HashMap<String, String> ettProjekt : listaAvProjekt) {
            
                    String a_Id = ettProjekt.get("ANVANDAREID");
                    String f_Id = ettProjekt.get("FORSKNINGSPROJEKTID");
            
                    System.out.println(ettProjekt);
                    System.out.println(a_Id);
                    System.out.println(f_Id);
                    
                    {
                        String query4 = ("SELECT PUBLIK FROM FORSKNINGSPROJEKT WHERE ID = " + f_Id);
                        try {
                         ArrayList<HashMap<String, String>> listaAvForskProjekt = minDatabaskoppling.fetchRows(query4);
                         
                         for (HashMap<String, String> ettAnnatProjekt : listaAvForskProjekt) {
                             
                             String publik = ettAnnatProjekt.get("PUBLIK");
                             
                             System.out.println(ettAnnatProjekt);
                             System.out.println(publik);
                                {String query5 = ("update FORSKNINGSPROJEKT set PUBLIK = 'J' where ID = " + anvandareID);
                                    minDatabaskoppling.update(query5);
                                System.out.println("Projektet är publikt");
                                txtAreaProjekt.setText("Projektet är publikt");}
                                                           
                         }
                    } catch (InfException ex) {
                        System.out.println(ex.getMessage());
                    } catch (NullPointerException ex) {
                        System.out.println("Internt felmeddelande: " + ex.getMessage());
                    }}
           
                    }} catch (InfException ex) {
            System.out.println(ex.getMessage());
        } catch (NullPointerException ex) {
            System.out.println("Internt felmeddelande: " + ex.getMessage());
        }
                
    }//GEN-LAST:event_btnAndraTillPubliktActionPerformed

    
    //Metod för att ändra ett projekt till privat, med krav om medlemskap i gruppen
    private void btnAndraTillPrivatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndraTillPrivatActionPerformed
            txtAreaProjekt.setText("");
        String gruppId = txtAndraStatus.getText();
         anvandareID = 5;
        
        
        String query3 = ("select * from PROJEKT where ANVANDAREID = " + anvandareID + " AND FORSKNINGSPROJEKTID = " + gruppId);
        
                try {
                    ArrayList<HashMap<String, String>> listaAvProjekt = minDatabaskoppling.fetchRows(query3);
            
                    for (HashMap<String, String> ettProjekt : listaAvProjekt) {
            
                    String a_Id = ettProjekt.get("ANVANDAREID");
                    String f_Id = ettProjekt.get("FORSKNINGSPROJEKTID");
            
                    System.out.println(ettProjekt);
                    System.out.println(a_Id);
                    System.out.println(f_Id);
                    
                    {
                        String query4 = ("SELECT PUBLIK FROM FORSKNINGSPROJEKT WHERE ID = " + f_Id);
                        try {
                         ArrayList<HashMap<String, String>> listaAvForskProjekt = minDatabaskoppling.fetchRows(query4);
                         
                         for (HashMap<String, String> ettAnnatProjekt : listaAvForskProjekt) {
                             
                             String publik = ettAnnatProjekt.get("PUBLIK");
                             
                             System.out.println(ettAnnatProjekt);
                             System.out.println(publik);
                                {String query5 = ("update FORSKNINGSPROJEKT set PUBLIK = 'N' where ID = " + anvandareID);
                                    minDatabaskoppling.update(query5);
                                System.out.println("Projektet är publikt");
                                txtAreaProjekt.setText("Projektet är privat");}
                                                           
                         }
                    } catch (InfException ex) {
                        System.out.println(ex.getMessage());
                    } catch (NullPointerException ex) {
                        System.out.println("Internt felmeddelande: " + ex.getMessage());
                    }}
           
                    }} catch (InfException ex) {
            System.out.println(ex.getMessage());
        } catch (NullPointerException ex) {
            System.out.println("Internt felmeddelande: " + ex.getMessage());
        }
          
    }//GEN-LAST:event_btnAndraTillPrivatActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAndraTillPrivat;
    private javax.swing.JButton btnAndraTillPublikt;
    private javax.swing.JButton btnHamtaEgnaProjekt;
    private javax.swing.JButton btnHamtaProjekt;
    private javax.swing.JTextField txtAndraStatus;
    private javax.swing.JTextArea txtAreaProjekt;
    // End of variables declaration//GEN-END:variables
}
